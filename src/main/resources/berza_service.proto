syntax = "proto3";

package rs.raf.pds.v5.z2.gRPC;

option java_multiple_files = true;
option java_package = "rs.raf.pds.v5.z2.gRPC";

import "google/protobuf/timestamp.proto";

service BerzaService {
  rpc GetCompaniesData(CompanyRequest) returns (CompanyList){}
  rpc RegisterClient(Client) returns (RegisterResponse) {}
  rpc Ask(AskRequest) returns (AskResponse) {}
  rpc Bid(BidRequest) returns (BidResponse) {}
  rpc SellOrder(SellOrderRequest) returns (SellOrderResponse) {}
  rpc BuyOrder (BuyOrderRequest) returns (BuyOrderResponse){}
  rpc TransactionsList(TransactionsRequest) returns (TransactionsResponse){}
  rpc PriceUpdates(SubscribeRequest) returns (SubscribeResponse) {}
}

// Struktura koja sadr≈æi informacije o kompaniji
message Company {
  string symbol = 1;
  string name = 2;
  double price = 3;
  double change = 4;
  google.protobuf.Timestamp date = 5;
  double lastPrice=6;
  repeated double oldPrices=7;
}

message CompanyList{
  repeated Company companies = 1;
}

// Struktura koja predstavlja zahtev za podacima o kompanijama
message CompanyRequest{
  string ClientId = 1;
  repeated string Symbols = 2;
}

//Struktura koja predstavlja informacije o klijentu
message Client {
  string clientId = 1;
  repeated SaleOffer saleOffers = 2;
  repeated BuyOffer buyOffers = 3;
  repeated AllShares shares=4;
  repeated string symbols=5;
}
message AllShares {
  string symbol = 1;
  int32 totalShares = 2;
  double price = 3;
}

message SaleOffer {
  string symbol = 1;
  int32 totalShares=2;
  double price=3;
}

message BuyOffer {
  string symbol = 1;
  int32 totalShares=2;
  double price=3;
}

message RegisterResponse {
  bool success = 1;
}
message AskRequest{
  string symbol=1;
  int32 numberOfOffers=2;
}
message AskOffer{
  string symbol=1;
  double price=2;
  int32 numberOfOffers=3;
  string clientId=4;
}
message AskResponse{
  repeated AskOffer offers=1;
}
message BidRequest{
  string symbol=1;
  int32 numberOfOffers=2;
}
message BidOffer{
  string symbol=1;
  double price=2;
  int32 numberOfOffers=3;
  string clientId=4;
}
message BidResponse{
  repeated BidOffer offers=1;
}
message SellOrderRequest{
  string symbol=1;
  double price=2;
  int32 numberOfShares=3;
  string clientId=4;
}
message BuyOrderRequest{
  string symbol=1;
  double price=2;
  int32 numberOfShares=3;
  string clientId=4;
}
message SellOrderResponse{
  bool success=1;
  string message=2;
}
message BuyOrderResponse{
  bool success=1;
  string message=2;
}
message Transaction {
  string buyerClientId = 1;
  string sellerClientId = 2;
  string symbol = 3;
  int32 numberOfShares = 4;
  double price = 5;
  string timestamp= 6;
}
message TransactionsRequest{
  string timestamp = 1;
  string symbol=2;
}
message TransactionsResponse{
  repeated Transaction transactions=1;
}
message SubscribeRequest {
  string clientId = 1;
  repeated string symbols = 2;
}
message SubscribeResponse {
  bool success = 1;
  string message = 2;
}

